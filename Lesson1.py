# 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.

UserName = 'Воробьев Игорь'
UserAge = 39
UserWeigth = 76.6

print(f'Привет. Меня зовут {UserName}. Мне {UserAge} лет. Я вешу {UserWeigth} кг')

UserName = input('А как тебя зовут? ')
print(f'Приятно познакомиться, {UserName}')

UserAge = int(input('Сколько тебе лет? '))
print(f'{UserAge} лет! Ого!')

UserWeigth = float(input('Извини за нескромный вопрос, но всё же: "Сколько ты весишь?" '))
print(f'Ты весишь {UserWeigth} кг')

########################################################################################################################

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс. Используйте форматирование строк.

OriginalTimeInSecond = UserTimeInSecond = int(input('Введите время в секундах: '))

HourCount = str(UserTimeInSecond // 3600)
if len(HourCount) < 2:                     # если знак один до для вывода в формате чч добавляем до 2-х знаков
    HourCount = '0' + HourCount

UserTimeInSecond %= 3600

MinuteCount = str(UserTimeInSecond // 60)
if len(MinuteCount) < 2:                   # если знак один до для вывода в формате мм добавляем до 2-х знаков
    MinuteCount = '0' + MinuteCount

SecondCount = str(UserTimeInSecond % 60)
if len(SecondCount) < 2:                   # если знак один до для вывода в формате сс добавляем до 2-х знаков
    SecondCount = '0' + SecondCount

print(f'Указанное вами время {OriginalTimeInSecond} секунд в формате чч:мм:сс составляет {HourCount}:{MinuteCount}:{SecondCount}')

########################################################################################################################

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369

UserNumber = input('Введите число n: ')
print(f'Сумма чисел по формуле n + nn + nnn составляет: {int(UserNumber) + int(UserNumber * 2) + int(UserNumber * 3)}')

########################################################################################################################

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.

UserNumber = int(input('Введите целое положительное число: '))
MaxDigit = 0
NextСhallenger = 0

while UserNumber > 0:
    NextСhallenger = UserNumber % 10

    if NextСhallenger > MaxDigit:
        MaxDigit = NextСhallenger

    UserNumber //= 10

print(f'Самая большая цифра в вашем числе это цифра {MaxDigit}')

########################################################################################################################

# 5. Запросите у пользователя значения выручки и издержек фирмы.
#    Определите, с каким финансовым результатом работает фирма (прибыль — выручка больше издержек, или убыток — издержки больше выручки).
#    Выведите соответствующее сообщение. Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
#    Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

FirmProfit  = float(input('Введите значение выручки: '))
FirmOutgoings = float(input('Введите значение издержек: '))

if FirmProfit == FirmOutgoings:
    print('Фирма отработала "в ноль"')
elif FirmProfit < FirmOutgoings:
    print('Фирма отработала в убыток')
else:
    print(f'Фирма отработала с прибылью. Рентабельность выручки составляет {(FirmProfit - FirmOutgoings) / FirmProfit * 100} %')

    FirmEmployeeCount = int(input('Укажите численность сотрудников фирмы: '))
    print(f'Прибыль фирмы в расчете на одного сотрудника составляет {(FirmProfit - FirmOutgoings) / FirmEmployeeCount}')

########################################################################################################################

# 6 (Дополнительно). Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
#   Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
#   Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
#   Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

FirstDayDistance = float(input('Каков результат пробежки в первый день? '))
FinalDistance = float(input('К какому результату стремится спортсмен? '))
DayCount = 1

while FirstDayDistance < FinalDistance:
    FirstDayDistance += FirstDayDistance * 0.1
    DayCount += 1

print(f'На {DayCount} день спортсмен достиг результата — не менее {FinalDistance} км')

########################################################################################################################